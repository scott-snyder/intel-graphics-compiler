Bottom: 587b5ab05467b275568e7d06b5bbda0aae223398
Top:    7288df59c40cdcf62340d0636d993d8aad69b4d4
Author: scott snyder <sss@karma>
Date:   2020-05-27 21:05:28 -0400

Refresh of llvm11

---

diff --git a/IGC/Compiler/CISACodeGen/EmitVISAPass.cpp b/IGC/Compiler/CISACodeGen/EmitVISAPass.cpp
index 1aa6e353..31c6adca 100644
--- a/IGC/Compiler/CISACodeGen/EmitVISAPass.cpp
+++ b/IGC/Compiler/CISACodeGen/EmitVISAPass.cpp
@@ -14320,7 +14320,7 @@ void EmitPass::emitVectorBitCast(llvm::BitCastInst* BCI)
     }
     if (dstTy->isVectorTy())
     {
-        VectorType* VTy = dyn_cast<VectorType> (srcTy);
+        VectorType* VTy = dyn_cast<VectorType> (dstTy);
         dstEltTy = VTy->getElementType();
         dstNElts = VTy->getNumElements();
     }
diff --git a/IGC/Compiler/CISACodeGen/helper.cpp b/IGC/Compiler/CISACodeGen/helper.cpp
index 5b5a0f36..b19b89b3 100644
--- a/IGC/Compiler/CISACodeGen/helper.cpp
+++ b/IGC/Compiler/CISACodeGen/helper.cpp
@@ -318,7 +318,7 @@ namespace IGC
         {
             llvm::Type* dataType = storeVal->getType();
             IGC_ASSERT(nullptr != dataType);
-            IGC_ASSERT((dataType->getPrimitiveSizeInBits() == 16) || (dataType->getPrimitiveSizeInBits() == 32));
+            IGC_ASSERT((dataType->getPrimitiveSizeInBits() == 8) ||(dataType->getPrimitiveSizeInBits() == 16) || (dataType->getPrimitiveSizeInBits() == 32));
 
             llvm::Type* types[2] = {
                 bufPtr->getType(),
diff --git a/IGC/Compiler/Optimizer/OCLBIUtils.cpp b/IGC/Compiler/Optimizer/OCLBIUtils.cpp
index 378c46c4..4af5ff86 100644
--- a/IGC/Compiler/Optimizer/OCLBIUtils.cpp
+++ b/IGC/Compiler/Optimizer/OCLBIUtils.cpp
@@ -441,6 +441,29 @@ Value* CImagesBI::CImagesUtils::traceImageOrSamplerArgument(CallInst* pCallInst,
                     baseValue = (shuffleidx < dyn_cast<VectorType>(inst->getOperand(0)->getType())->getNumElements()) ?
                         inst->getOperand(0) : inst->getOperand(1);
                 }
+                else if (BitCastInst * inst = dyn_cast<BitCastInst>(baseValue))
+                {
+                  if (inst->getSrcTy()->getTypeID() == Type::FixedVectorTyID &&
+                      inst->getDestTy()->getTypeID() == Type::FixedVectorTyID)
+                  {
+                    VectorType* srcTy = dyn_cast<VectorType> (inst->getSrcTy());
+                    VectorType* dstTy = dyn_cast<VectorType> (inst->getDestTy());
+                    //unsigned int srcNum = srcTy->getNumElements();
+                    //unsigned int dstNum = dstTy->getNumElements();
+                    unsigned int srcEltSz = srcTy->getElementType()->getPrimitiveSizeInBits();
+                    unsigned int dstEltSz = dstTy->getElementType()->getPrimitiveSizeInBits();
+                    idx = idx * dstEltSz / srcEltSz;
+                  }
+                  baseValue = inst->getOperand(0);
+                }
+                else if (CastInst * inst = dyn_cast<CastInst>(baseValue))
+                {
+                  baseValue = inst->getOperand(0);
+                }
+                else if (dyn_cast<UndefValue>(baseValue))
+                {
+                  return nullptr;
+                }
                 else
                 {
                     IGC_ASSERT(false && "unknown construct!");
